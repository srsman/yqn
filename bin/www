/*
 * 模块依赖
 */
var app = require('../app'),
    debug = require('debug')('mobile:server'),
    http = require('http'),
    serverConfig = require('../server_config'),
    qiniuEnv = process.env.NODE_ENV,
    currentConfig = serverConfig.env[qiniuEnv];

/*
 * http重定向至https
 */
var redirectServer = http.createServer(function(req, res) {
  if(req.method.toLowerCase() == 'head') {
    // 针对阿里健康检查做的特殊处理
    res.statusCode = 200;
  } else {
    res.statusCode = 302;
    res.setHeader('Location', currentConfig.redirect.url + req.url);
  }

  res.end();
});
redirectServer.listen(currentConfig.redirect.port);

var httpPort = getPort('http'), // 获取端口号
    server = http.createServer(app); // 创建http服务

/*
 * 监听提供的端口号
 */
server.listen(httpPort, function() {
  console.log('一起牛官网正在监听端口' + httpPort);
});
server.on('error', onError);
server.on('listening', onListening);

/*
 * 获取端口号
 * @type: 可传参数http,https; 默认http
 */
function getPort(type) {
  var cfgPort;

  switch(type) {
    case 'http':
      cfgPort = currentConfig.port.http;
      break;
    case 'https':
      cfgPort = currentConfig.port.https;
      break;
    default:
      cfgPort = currentConfig.port.http;
  }

  cfgPort = parseInt(cfgPort, 10);

  return cfgPort;
}

/*
 * 监听服务的"error"事件
 */
function onError(error) {
  if(error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof httpPort === 'string'
    ? 'Pipe: ' + httpPort
    : 'Port: ' + httpPort;

  // 处理特定的监听错误并输出错误信息
  switch(error.code) {
    case 'EACCES':
      console.error(bind + ', 需要提升权限');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ', 已在使用中');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/*
 * 监听服务的"listening"事件
 */
function onListening() {
  var addr = server.address(),
      bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;

  debug('Listening on ' + bind);
}
